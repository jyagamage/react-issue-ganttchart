{"version":3,"sources":["components/Toolbar/Toolbar.js","components/Toolbar/index.js","functions/Common/CommonHelper.js","components/Gantt/GanttAttachEvent.js","components/Gantt/GanttConfig.js","components/Gantt/Gantt.js","components/Gantt/GanttTemplates.js","components/Gantt/index.js","functions/Common/Parser.js","functions/GitHub/GitHubURLHelper.js","functions/GitLab/GitLabURLHelper.js","functions/GitHub/GitHubHelper.js","functions/GitHub/GitHubAPI.js","functions/GitLab/GitLabHelper.js","functions/GitLab/GitLabAPI.js","functions/Common/IssueAPI.js","State/Reducer.js","App.js","serviceWorker.js","index.js"],"names":["selector_style","multiselectContainer","width","display","verticalAlign","padding","alignItems","chips","background","fontSize","searchBox","border","withStyles","theme","root","marginRight","props","classes","noValidate","IconButton","color","style","onClick","e","gantt","config","show_grid","render","TextField","className","required","placeholder","label","onChange","onGitURLChange","target","value","inputRef","register","name","type","onTokenChange","options","labels","selectedValues","selected_labels","onSelect","onSelectedLabelChange","onRemove","displayValue","hidePlaceholder","emptyRecordMsg","closeIcon","Autocomplete","size","member_list","getOptionLabel","option","selected_assignee","noOptionsText","assignee","onSelectedAssigneeChange","renderInput","params","variant","ButtonGroup","height","Button","onZoomChange","onUpdateClick","window","open","Toolbar","isValidVariable","variable","Array","isArray","length","isValidIDName","id_name","isValidURL","url","test","orgRound","base","Math","round","calculateDuration","start_date","due_date","start_date_moment","moment","diff","calculateDueDate","start_date_str","duration","Date","add","toDate","date2string","date","Object","prototype","toString","call","isNaN","getFullYear","string","toLocaleDateString","getMonth","getDate","adjustDateString","date_str","getGanttStartDate","created_at","getGanttDueDate","_due_date","getGanttUpdateDate","updated_at","getGanttDuration","updateParentTaskDate","gantt_task","parent","parent_gantt_task","getTask","valueOf","getTime","updateTask","id","end_date","updateChildTaskDate","child_gantt_task_id","child_gantt_task","date_duration","due_date_str","calculateStartDate","zoom_level","levels","scale_height","min_column_width","scales","unit","step","format","shortenDate","slice","Gantt","containerRef","useRef","useEffect","xml_date","order_branch","order_branch_free","keep_grid_width","grid_resize","open_tree_initially","fit_tasks","sort","columns","tree","resize","align","template","obj","plugins","drag_timeline","showDate","ext","zoom","init","templates","timeline_cell_class","item","today","getDay","yesterday","setDate","task_text","start","end","task","text","task_class","progress","setGanttTemplates","attachEvent","gantt_task_id","openIssueAtBrowser","openNewIssueAtBrowser","getChildren","map","updateIssueByAPI","mode","afterlinkId","afterlink","addobj","$target","forEach","linkId","link","getLink","linkid","linkIds","source","push","relinkIds","dependon","links","original","state","getState","minDate","min_date","maxDate","max_date","scaleStep","scale_step","scale_unit","repaint","abs","current","setLevel","eachTask","$open","issue","clearAll","addTask","console","log","addLink","err","message","ref","removeFirstSharp","id_str","substring","removeLastSpace","parseYamlFromDescription","description","yaml_part","str","split","getYamlPartFromDescription","yaml_struct","yaml","load","getNumberFromDescriptionYaml","column_name","number","getDateFromDescriptionYaml","getStringFromDescriptionYaml","replacePropertyInDescriptionString","task_section","dump","first_section","end_section","convertIDNameListToString","list","info","convertIDNamesStringToList","split_string","element","index","array","parseInt","getDependonFromDescriptionYaml","GitHubAPIURL","GitHubURL","isGitHubURL","git_url","getGitHubNameSpaceFromGitURL","split_git_url","getGitHubProjectFromGitURL","getGitHubAPIURLIssuebyNumber","getGitHubAPIURLIssueFilterd","url_query_str","getGitHubAPIURLLabel","getGitHubAPIURLCollaborators","getGitHubURLIssuebyNumber","n","Number","isFinite","isGitLabURL","getSelfHostingGitLabDomain","getGitLabDomain","gitlab_domain","self_hosting_gitlab_domain","substr","indexOf","getGitLabURL","getGitLabAPIURL","getGitLabNameSpaceFromGitURL","getGitLabProjectFromGitURL","postFixToken","token","post_fix_str","getGitLabAPIURLIssueFilterd","getGitabAPIURLIssuebyNumber","getGitLabAPIURLLabel","getGitLabAPIURLMember","getGitHubAssignee","issue_info","login","generateGanttTaskFromGitHub","title","update","generateLinkFromGitHub","body","i","data","updateGitHubDescriptionStringFromGanttTask","replace","getGitHubIssueFromAPI","a","axios","get","headers","Authorization","then","res","prelink","catch","Promise","reject","getGitHubIssuesFromAPI","promise_list","all","setGitHubLabelListOfRepoFromAPI","setGitHubMemberListOfRepoFromAPI","members","warn","updateGitHubIssueFromGanttTask","Arrange","generate","arrangelink","prearrangelink","Arrangegantt","post","openGitHubNewIssueAtBrowser","encodeURIComponent","getGitHubURLNewIssueWithTemplate","getGitLabAssignee","generateGanttTaskFromGitLab","iid","generateLinkFromGitLab","getGitLabIssuesFromAPI","error","setGitLabLabelListOfRepoFromAPI","lebel_info","setGitLabMemberListOfRepoFromAPI","updateGitLabIssueFromGanttTask","arrange","JSON","stringify","updateGitLabDescriptionStringFromGanttTask","put_url","put","openGitLabIssueAtBrowser","getGitLabURLIssuebyNumber","openGitLabNewIssueAtBrowser","getGitLabURLNewIssueWithTemplate","getIssuesFromAPI","resolve","setLabelListOfRepoFromAPI","setMemberListOfRepoFromAPI","openGitHubIssueAtBrowser","initialState","currentZoom","issue_columns","reducerFunc","action","handleGitURLChange","handleTokenChange","handleSelectedLabelsChange","handleMemberListChange","handleSelectedAssigneeChange","handleOpenIssueAtBrowser","handleOpenNewIssueAtBrowser","handleUpdateIssueByAPI","setStateFromURLQueryString","setValue","setURLQuery","bake_cookie","URLSearchParams","location","search","set","history","selected_assignee_list","withRouter","useReducer","dispatch","useForm","read_cookie","issues","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a44fe11.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { gantt } from 'dhtmlx-gantt';\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\n\nconst Toolbar = (props) => {\n  const { classes } = props;\n  return (\n    <form noValidate>\n      <IconButton color=\"primary\" style={{ verticalAlign: 'middle' }}>\n        <MenuOpenIcon\n          onClick={(e) => {\n            gantt.config.show_grid = !gantt.config.show_grid;\n            gantt.render();\n          }} />\n      </IconButton>\n      <TextField\n        className={classes.root}\n        required\n        placeholder=\"https://github.com/lamact/react-issue-ganttchart\"\n        label=\"Git Repository URL\"\n        style={{ width: '20%', verticalAlign: 'middle' }}\n        onChange={(e) => {\n          props.onGitURLChange(e.target.value);\n        }}\n        inputRef={props.register}\n        name=\"git_url\"\n      />\n      <TextField\n        className={classes.root}\n        type=\"password\"\n        placeholder=\"Access Token\"\n        label=\"Access Token\"\n        style={{ width: '10%', verticalAlign: 'middle' }}\n        onChange={(e) => {\n          props.onTokenChange(e.target.value);\n        }}\n        inputRef={props.register}\n        name=\"token\"\n      />\n      <Multiselect\n        className={classes.root}\n        options={props.labels}\n        selectedValues={props.selected_labels}\n        onSelect={(options) => {\n          props.onSelectedLabelChange(options);\n        }}\n        onRemove={(options) => {\n          props.onSelectedLabelChange(options);\n        }}\n        displayValue=\"name\"\n        style={selector_style}\n        placeholder=\"filter by labels\"\n        hidePlaceholder=\"false\"\n        emptyRecordMsg=\"No Labels\"\n        closeIcon=\"cancel\"\n      />\n      <Autocomplete\n        className={classes.root}\n        size=\"small\"\n        options={props.member_list}\n        getOptionLabel={(option) => option.name}\n        value={props.selected_assignee}\n        noOptionsText=\"Requires a valid token\"\n        onChange={(e, assignee) => {\n          props.onSelectedAssigneeChange(assignee);\n        }}\n        style={{\n          width: '15%',\n          verticalAlign: 'middle',\n          display: 'inline-block',\n          marginRight: '15px',\n        }}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            className={classes.root}\n            label=\"Assignee\"\n            variant=\"standard\"\n          />\n        )}\n      />\n      <ButtonGroup size=\"small\" style={{ height: '34px' }}>\n        <Button\n          onClick={(e) => {\n            props.onZoomChange('Weeks');\n          }}\n        >\n          Weeks\n        </Button>\n        <Button\n          onClick={(e) => {\n            props.onZoomChange('Days');\n          }}\n        >\n          Days\n        </Button>\n      </ButtonGroup>\n      <IconButton color=\"primary\" style={{ verticalAlign: 'middle' }}>\n        <CachedIcon\n          onClick={(e) => {\n            props.onUpdateClick();\n          }}\n        />\n      </IconButton>\n      <IconButton color=\"primary\" style={{ verticalAlign: 'middle' }}>\n        <GitHubIcon onClick={() => window.open('https://github.com/lamact/react-issue-ganttchart')} />\n      </IconButton>\n    </form>\n  );\n};\n\nconst styles = (theme) => ({\n  root: {\n    '& > *': {\n      fontSize: '13px',\n      marginRight: '4px',\n    },\n  },\n});\n\nconst selector_style = {\n  multiselectContainer: {\n    width: '35%',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    padding: '4px',\n    alignItems: 'flex-end',\n  },\n  chips: {\n    background: 'light blue',\n    fontSize: '15px',\n  },\n  searchBox: {\n    border: 'none',\n  },\n};\n\nexport default withStyles(styles)(Toolbar);\n","import Toolbar from './Toolbar';\nimport './Toolbar.css';\nexport default Toolbar;","import moment from 'moment';\n\nexport const isValidVariable = (variable) => {\n  if (\n    variable !== null &&\n    variable !== [] &&\n    variable !== void 0 &&\n    variable !== ''\n  ) {\n    return true;\n  }\n  if (Array.isArray(variable)) {\n    return variable.length > 0;\n  }\n  return false;\n};\n\nexport const validVariable = (variable) => {\n  if (isValidVariable(variable)) {\n    return variable;\n  } else {\n    return '';\n  }\n};\n\nexport const isValidIDName = (id_name) => {\n  return isValidVariable(id_name) && 'id' in id_name && 'name' in id_name;\n};\n\nexport const isValidURL = (url) => {\n  if (!isValidVariable(url)) {\n    return false;\n  }\n  return /https?:\\/\\//.test(url);\n};\n\nexport const isNumber = (n) => {\n  if (typeof n === 'number' && Number.isFinite(n)) {\n    return true;\n  }\n  return false;\n};\n\nexport const orgRound = (value, base) => {\n  return Math.round(value / base) * base;\n};\n\nexport const calculateDuration = (start_date, due_date) => {\n  const start_date_moment = moment(start_date, 'YYYY/MM/DD');\n  const due_date_moment = moment(due_date, 'YYYY/MM/DD');\n  return due_date_moment.diff(start_date_moment, 'days') + 1;\n};\n\nexport const calculateStartDate = (due_date_str, duration) => {\n  const due_date = new Date(due_date_str);\n  const start_date = moment(due_date, 'YYYY/MM/DD')\n    .add(-duration, 'd')\n    .toDate();\n  return date2string(start_date);\n};\n\nexport const calculateDueDate = (start_date_str, duration) => {\n  const start_date = new Date(start_date_str);\n  const due_date = moment(start_date, 'YYYY/MM/DD')\n    .add(duration - 1, 'd')\n    .toDate();\n  return date2string(due_date);\n};\n\nexport const date2string = (date) => {\n  if (Object.prototype.toString.call(date) !== '[object Date]') {\n    return null;\n  } else if (isNaN(date.getFullYear())) {\n    return null;\n  }\n\n  let string = date.toLocaleDateString('ja-JP');\n  if (!/\\d{4}\\/\\d{1,2}\\/\\d{1,2}/.test(string)) {\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    string = year + '/' + month + '/' + day;\n  }\n  return string;\n};\n\nexport const adjustDateString = (date_str) => {\n  return date2string(new Date(date_str));\n};\n\nexport const getGanttStartDate = (start_date, due_date, created_at) => {\n  let start_date_str = null;\n  if (isValidVariable(start_date)) {\n    start_date_str = date2string(start_date);\n  } else if (isValidVariable(created_at)) {\n    start_date_str = adjustDateString(created_at);\n  }\n  return start_date_str;\n};\n\nexport const getGanttDueDate = (start_date, due_date, created_at) => {\n  let _due_date = null;\n  if (isValidVariable(due_date)) {\n    _due_date = new Date(due_date);\n  } else if (isValidVariable(created_at)) {\n    _due_date = new Date(created_at);\n  }\n  return _due_date;\n};\n\nexport const getGanttUpdateDate = (created_at, updated_at) => {\n  let updated_date_str = null;\n  if (updated_at != null) {\n    updated_date_str = adjustDateString(updated_at);\n  } else {\n    updated_date_str = adjustDateString(created_at);\n  }\n  return updated_date_str;\n};\n\nexport const getGanttDuration = (start_date, due_date, created_at) => {\n  let duration = null;\n  if (!isValidVariable(due_date)) {\n    return null;\n  }\n  if (!isValidVariable(start_date)) {\n    start_date = created_at;\n  }\n  if (start_date != null && due_date != null) {\n    duration = calculateDuration(start_date, due_date);\n  } else {\n    duration = 1;\n  }\n  return duration;\n};\n","import ReactMarkdown from 'react-markdown';\nimport ReactDOMServer from 'react-dom/server';\nimport {\n  calculateStartDate,\n  calculateDueDate,\n} from '../../functions/Common/CommonHelper';\n\nexport const attachEvent = (gantt, props) => {\n  gantt.attachEvent('onTaskDblClick', (gantt_task_id, e) => {\n    props.openIssueAtBrowser(gantt_task_id);\n  });\n\n  gantt.attachEvent('onTaskCreated', (gantt_task_id, e) => {\n    props.openNewIssueAtBrowser(gantt_task_id);\n  });\n\n  gantt.attachEvent('onAfterTaskUpdate', (id, gantt_task) => {\n    updateParentTaskDate(gantt, gantt_task);\n    gantt.getChildren(gantt_task.id).map((child_gantt_task_id) => {\n      updateChildTaskDate(gantt, gantt_task, child_gantt_task_id);\n    });\n    props.updateIssueByAPI(gantt_task, gantt);\n  });\n\n  gantt.attachEvent('onBeforeTaskUpdate', (id, mode, gantt_task) => {\n  });\n\n  gantt.attachEvent('onAfterTaskMove', (id, parent) => {\n    let gantt_task = gantt.getTask(id);\n    if ('parent' in gantt_task) {\n      if (gantt_task.parent !== 0) {\n        gantt_task.parent = parent;\n        props.updateIssueByAPI(gantt_task, gantt);\n      }\n    }\n  });\n  gantt.attachEvent(\"onAfterLinkAdd\", function (id, item) {\n    let afterlinkId = [];\n    let afterlink = [];\n    let addobj = item.target;\n    let taskObj = gantt.getTask(addobj);\n    let target = taskObj.$target;\n    target.forEach(function (linkId) {\n      let link = gantt.getLink(linkId);\n      let linkid = link.target;\n      let linkIds = link.source;\n      afterlink.push({type:'0',target:linkid,source:linkIds});\n      let relinkIds = linkIds.slice(1);\n      if (relinkIds != '') {\n        afterlinkId.push(relinkIds);\n      }\n    });\n    // let linkids = afterlinkId.join(',');\n    // gantt.getTask(addobj).dependon = linkids; //changes task's data\n    // gantt.updateTask(addobj); //renders the updated task\n    gantt.getTask(addobj).dependon = afterlinkId;\n    gantt.getTask(addobj).links = afterlink;\n    gantt.updateTask(addobj);\n  });\n\n  gantt.attachEvent(\"onAfterLinkDelete\", function (id, item) {\n    let afterlinkId = [];\n    let afterlink = [];\n    let addobj = item.target;\n    let taskObj = gantt.getTask(addobj);\n    let target = taskObj.$target;\n    target.forEach(function (linkId) {\n      let link = gantt.getLink(linkId);\n      let linkid = link.target;\n      let linkIds = link.source;\n      afterlink.push({type:'0',target:linkid,source:linkIds});\n      let relinkIds = linkIds.slice(1);\n      if (relinkIds != '') {\n        afterlinkId.push(relinkIds);\n      }\n    });\n    // let linkids = afterlinkId.join(',');\n    // gantt.getTask(addobj).dependon = linkids; //changes task's data\n    // gantt.updateTask(addobj); //renders the updated task\n    gantt.getTask(addobj).dependon = afterlinkId;\n    gantt.getTask(addobj).links = afterlink;\n    gantt.updateTask(addobj);\n  });\n  // // Custom QuickInfo\n  // // https://docs.dhtmlx.com/gantt/desktop__quick_info.html\n  // gantt.attachEvent('onQuickInfo', (id) => {\n  //   let gantt_task = gantt.getTask(id);\n  //   gantt.locale.labels.detail_button = 'DETAIL';\n  //   gantt.$click.buttons.detail_button = (gantt_task_id) => {\n  //     props.openIssueAtBrowser(gantt_task_id);\n  //     return true;\n  //   };\n\n  //   gantt.ext.quickInfo.setContent({\n  //     header: {\n  //       title: '',\n  //       date: ReactDOMServer.renderToStaticMarkup().toString(),\n  //     },\n  //     content: ReactDOMServer.renderToStaticMarkup(\n  //       <div>\n  //         <h3>{gantt_task.text}</h3>\n  //         <ReactMarkdown>{gantt_task.description}</ReactMarkdown>\n  //       </div>\n  //     ).toString(),\n  //     buttons: ['detail_button'],\n  //   });\n  // });\n\n  // Changing the displayed range dynamically\n  // https://docs.dhtmlx.com/gantt/desktop__configuring_time_scale.html#range\n  gantt.attachEvent('onTaskDrag', function (id, mode, task, original) {\n    var state = gantt.getState();\n    var minDate = state.min_date,\n      maxDate = state.max_date;\n\n    var scaleStep =\n      gantt.date.add(new Date(), state.scale_step, state.scale_unit) -\n      new Date();\n\n    var showDate,\n      repaint = false;\n    if (mode == 'resize' || mode == 'move') {\n      if (Math.abs(task.start_date - minDate) < scaleStep) {\n        showDate = task.start_date;\n        repaint = true;\n      } else if (Math.abs(task.end_date - maxDate) < scaleStep) {\n        showDate = task.end_date;\n        repaint = true;\n      }\n\n      if (repaint) {\n        gantt.render();\n        gantt.showDate(showDate);\n      }\n    }\n  });\n};\n\nexport const updateParentTaskDate = (gantt, gantt_task) => {\n  if (!'parent' in gantt_task) {\n    return null;\n  }\n  if (gantt_task.parent === 0) {\n    return null;\n  }\n  let parent_gantt_task = gantt.getTask(gantt_task.parent).valueOf();\n  if (\n    parent_gantt_task.start_date.getTime() > gantt_task.start_date.getTime()\n  ) {\n    parent_gantt_task.start_date = gantt_task.start_date;\n    gantt.updateTask(parent_gantt_task.id, parent_gantt_task);\n    gantt.render();\n  }\n  if (parent_gantt_task.end_date.getTime() < gantt_task.end_date.getTime()) {\n    parent_gantt_task.end_date = gantt_task.end_date;\n    gantt.updateTask(parent_gantt_task.id, parent_gantt_task);\n    gantt.render();\n  }\n};\n\nexport const updateChildTaskDate = (gantt, gantt_task, child_gantt_task_id) => {\n  let child_gantt_task = gantt.getTask(child_gantt_task_id).valueOf();\n  const date_duration = child_gantt_task.duration.valueOf();\n  if (child_gantt_task.start_date.getTime() < gantt_task.start_date.getTime()) {\n    child_gantt_task.start_date = gantt_task.start_date;\n    child_gantt_task.end_date = new Date(\n      calculateDueDate(gantt_task.start_date, date_duration)\n    );\n    gantt.updateTask(child_gantt_task.id, child_gantt_task);\n    gantt.render();\n  }\n  if (child_gantt_task.end_date.getTime() > gantt_task.end_date.getTime()) {\n    child_gantt_task.start_date = new Date(\n      calculateStartDate(gantt_task.end_date, date_duration)\n    );\n    child_gantt_task.end_date = gantt_task.end_date;\n    gantt.updateTask(child_gantt_task.id, child_gantt_task);\n    gantt.render();\n  }\n};\n","const zoom_level = {\n  levels: [\n    {\n      name: 'Days',\n      scale_height: 30,\n      min_column_width: 25,\n      scales: [\n        { unit: 'month', step: 1, format: '%n' },\n        { unit: 'day', step: 1, format: '%d' },\n      ],\n    },\n    {\n      name: 'Weeks',\n      scale_height: 30,\n      min_column_width: 70,\n      scales: [{ unit: 'week', step: 1, format: '%n/%d~' }],\n    },\n  ],\n};\n\nconst shortenDate = (date) => {\n  if (Object.prototype.toString.call(date) !== '[object Date]') {\n    return null;\n  }\n  const m = ('00' + (date.getMonth() + 1)).slice(-2);\n  const d = ('00' + date.getDate()).slice(-2);\n  const shorten_date = m + '/' + d;\n  return shorten_date;\n};\n\nexport const setGanttConfig = (gantt) => {\n  gantt.config.xml_date = '%Y/%m/%d %H:%i';\n  gantt.config.order_branch = true;\n  gantt.config.order_branch_free = true;\n\n  gantt.config.keep_grid_width = true;\n  gantt.config.grid_resize = true;\n  gantt.config.open_tree_initially = true;\n  gantt.config.fit_tasks = true;\n  gantt.config.show_grid = false;\n  gantt.config.sort = true;\n\n  gantt.config.columns = [\n    {\n      name: \"text\", \n      label: \"Title\",\n      tree: true, \n      width: '400', \n      resize: true\n    },\n\n    // {\n    //   name: 'id',\n    //   label: 'No.',\n    //   align: 'left',\n    //   tree: true,\n    //   width: '120', \n    //   resize: true,\n    //   template: (obj) => {\n    //     var befweek = new Date();\n    //     befweek.setDate(befweek.getDate() - 7);\n    //     if (obj.update < befweek.toLocaleDateString()) {\n    //       return (\n    //         obj.id +\n    //         \"<a title='There is no update for a week.'><span class='overdue'>i</span></a>\"\n    //       );\n    //     }\n    //     return obj.id;\n    //   },\n    // },\n    {\n      name: 'start_date',\n      label: 'Start ',\n      align: 'center',\n      width: '60', \n      resize: true,\n      template: (obj) => {\n        return shortenDate(obj.start_date);\n      },\n    },\n    {\n      name: 'due_date',\n      label: 'Due ',\n      align: 'center',\n      width: '60', \n      resize: true,\n      template: (obj) => {\n        return shortenDate(obj.due_date);\n      },\n    },\n    { name: 'assignee', label: 'Assignee', align: 'center', width: '130' },\n    { name: 'add', label: '', width: '30' },\n  ];\n\n  gantt.plugins({\n    // quick_info: true,\n    drag_timeline: true,\n  });\n  gantt.showDate(new Date());\n  gantt.ext.zoom.init(zoom_level);\n};\n","import React, { useEffect, useRef } from 'react';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport { attachEvent } from './GanttAttachEvent.js';\nimport { setGanttTemplates } from './GanttTemplates.js';\nimport { setGanttConfig } from './GanttConfig.js';\nimport { isValidVariable } from '../../functions/Common/CommonHelper.js';\n\nconst Gantt = (props) => {\n  const containerRef = useRef(null);\n  useEffect(() => {\n    setGanttConfig(gantt);\n    setGanttTemplates(gantt);\n    attachEvent(gantt, props);\n    gantt.init(containerRef.current);\n    gantt.ext.zoom.setLevel(props.zoom);\n  }, []);\n\n  useEffect(() => {\n    if (props.zoom === 'Days') {\n      gantt.eachTask(function (task) {\n        task.$open = true;\n      });\n    } else {\n      gantt.eachTask(function (task) {\n        task.$open = false;\n      });\n    }\n    gantt.ext.zoom.setLevel(props.zoom);\n  }, [props.zoom]);\n\n  useEffect(() => {\n    try {\n      if (isValidVariable(props.issue) && props.issue.length != 0) {\n        gantt.clearAll();\n        // props.issue.map((issue) => {\n        //   gantt.addTask(issue);\n        // });\n        props.issue.map((issue) => {\n          gantt.addTask(issue);\n          if ('links' in issue) {\n            issue.links.map((link) => {\n              console.log(link);\n              gantt.addLink(link);\n              return null;\n            });\n          }\n        });\n\n\n        gantt.sort('due_date', false);\n        // gantt.render();\n      }\n    } catch (err) {\n      gantt.message({ text: err, type: 'error' });\n    }\n  }, [\n    props.issue,\n  ]);\n\n  return (\n    <div ref={containerRef} style={{ width: '100%', height: '100%' }}></div>\n  );\n};\n\nexport default Gantt;\n","import {\n  calculateDuration,\n  calculateDueDate,\n} from '../../functions/Common/CommonHelper.js';\n\nexport const setGanttTemplates = (gantt) => {\n  gantt.templates.timeline_cell_class = function (item, date) {\n    if (Object.prototype.toString.call(date) !== '[object Date]') {\n      return null;\n    }\n    var today = new Date();\n    if (date.getDate() === today.getDate() && date.getMonth() === today.getMonth()) {\n      return 'today';\n    }\n    if (date.getDay() === 0 || date.getDay() === 6) {\n      return 'weekend';\n    }\n    var yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    if (date < yesterday) {\n      return 'past_days';\n    }\n  };\n\n  gantt.templates.task_text = function (start, end, task) {\n    return task.text;\n  };\n\n  gantt.templates.task_class = function (start, end, task) {\n    if (task.progress == 1) {\n      return '';\n    }\n    if (task.progress < 0.01) {\n      if (start <= new Date()) {\n        return 'behind';\n      }\n    } else if (\n      new Date(\n        calculateDueDate(\n          start,\n          (calculateDuration(start, end) + 1) * task.progress\n        )\n      ) < new Date()\n    ) {\n      return 'behind';\n    }\n  };\n};\n","import Gantt from './Gantt';\nimport './Gantt.css';\nexport default Gantt;","import { isValidVariable, isValidIDName, isNumber } from './CommonHelper.js';\nimport yaml from 'js-yaml';\nimport { gantt } from 'dhtmlx-gantt';\n\nexport const removeFirstSharp = (id_str) => {\n  if (id_str.length > 1 && /^#/.test(id_str)) {\n    id_str = id_str.substring(1);\n  }\n  return id_str;\n};\n\nexport const removeLastSlash = (url) => {\n  if (url.length > 1 && /\\/$/.test(url)) {\n    url = url.slice(0, -1);\n  }\n  return url;\n};\n\nexport const removeLastSpace = (url) => {\n  if (url.length > 1 && / +$/.test(url)) {\n    url = url.slice(0, -1);\n  }\n  return url;\n};\n\nexport const getYamlPartFromDescription = (description) => {\n  if (description === null) {\n    return null;\n  }\n  if (typeof description !== 'string') {\n    return null;\n  }\n  let str = description.split(/^```yaml/);\n  if (str === null || str.length < 2) {\n    return null;\n  }\n  str = str[1].split(/```/);\n  if (str === null || str.length < 2) {\n    return null;\n  }\n  return str[0];\n};\n\nexport const parseYamlFromDescription = (description) => {\n  if (description === null) {\n    return null;\n  }\n  const yaml_part = getYamlPartFromDescription(description);\n  if (yaml_part === null) {\n    return null;\n  }\n\n  let yaml_struct = null;\n  try {\n    yaml_struct = yaml.load(yaml_part);\n  } catch (e) {\n    gantt.message({ text: 'failed load yaml' + yaml_part, type: 'error' });\n  }\n  return yaml_struct;\n};\n\nexport const getStringFromDescriptionYaml = (description, column_name) => {\n  if (description === null) {\n    return null;\n  }\n  const yaml_struct = parseYamlFromDescription(description);\n  if (yaml_struct === null || !(column_name in yaml_struct)) {\n    return null;\n  }\n  const string = yaml_struct[column_name];\n  if (typeof string !== 'string') {\n    return null;\n  }\n  return removeLastSpace(removeLastSpace(string));\n};\n\nexport const getNumberFromDescriptionYaml = (description, column_name) => {\n  if (description === null) {\n    return null;\n  }\n  const yaml_struct = parseYamlFromDescription(description);\n  if (yaml_struct === null || !(column_name in yaml_struct)) {\n    return null;\n  }\n  const number = yaml_struct[column_name];\n  if (typeof number !== 'number') {\n    return null;\n  }\n  return number;\n};\n\nexport const getDateFromDescriptionYaml = (description, column_name) => {\n  if (description === null) {\n    return null;\n  }\n  const date = getStringFromDescriptionYaml(description, column_name);\n  if (!/\\d{4}\\/\\d{1,2}\\/\\d{1,2}/.test(date)) {\n    return null;\n  }\n  return new Date(date);\n};\n\nexport const replacePropertyInDescriptionString = (description, task) => {\n  if (description === null || task === null) {\n    return null;\n  }\n  let task_section = yaml.dump(task);\n  task_section =\n    `\\`\\`\\`yaml\n` +\n    task_section +\n    `\\`\\`\\``;\n  let str = description.split(/^```yaml/);\n  if (str === null || str.length < 2) {\n    if (/```/.test(description)) {\n      return null;\n    }\n    return task_section + '\\n' + description;\n  }\n  const first_section = str[0];\n  str = str[1].split(/```/);\n  if (str === null || str.length < 2) {\n    return null;\n  }\n  const end_section = str[1];\n  if (first_section == null || end_section == null) {\n    return null;\n  }\n  return first_section + task_section + end_section;\n};\n\nexport const convertIDNameListToString = (list) => {\n  let string = '';\n  if (isValidVariable(list)) {\n    list.map((info) => {\n      if (isValidIDName(info) && isValidVariable(info.id)) {\n        string += info.id + ':' + info.name + ',';\n      }\n      return null;\n    });\n    return string;\n  }\n  return null;\n};\n\nexport const convertIDNamesStringToList = (string) => {\n  let list = [];\n  if (isValidVariable(string)) {\n    const split_string = string.split(',');\n    split_string.forEach((element, index, array) => {\n      if (index < split_string.length - 1) {\n        const info = element.split(':');\n        if (!isNaN(parseInt(info[0]))) {\n          const label = {\n            id: parseInt(info[0]),\n            name: info[1],\n          };\n          list.push(label);\n        }\n      }\n    });\n  } else {\n    list = [{ id: 0, name: '' }];\n  }\n  return list;\n};\n\nexport const getDependonFromDescriptionYaml = (description, column_name) => {\n  if (description === null) {\n    return null;\n  }\n  const yaml_struct = parseYamlFromDescription(description);\n  if (yaml_struct === null || !(column_name in yaml_struct)) {\n    return null;\n  }\n  const number = yaml_struct[column_name];\n     return number;\n};\n","import {\n  isValidVariable,\n  isValidIDName,\n  isValidURL,\n  isNumber,\n} from '../Common/CommonHelper.js';\nimport { removeFirstSharp } from '../Common/Parser.js';\n\nconst GitHubAPIURL = 'https://api.github.com/repos/';\nconst GitHubURL = 'https://github.com/';\n\nexport const isGitHubURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return false;\n  }\n  if (git_url.split('/').length < 5) {\n    return false;\n  }\n  return /github\\.com/.test(git_url);\n};\n\nexport const getGitHubNameSpaceFromGitURL = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[3];\n  }\n  return null;\n};\n\nexport const getGitHubProjectFromGitURL = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[4];\n  }\n  return null;\n};\n\nexport const getGitHubAPIURLIssue = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues'\n  );\n};\n\nexport const getGitHubAPIURLIssuebyNumber = (git_url, number) => {\n  if (!isGitHubURL(git_url) || !isValidVariable(number)) {\n    return null;\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues/' +\n    number\n  );\n};\n\nexport const getGitHubAPIURLIssueFilterd = (git_url, labels, assignee) => {\n  if (\n    !isGitHubURL(git_url) ||\n    !isValidVariable(labels) ||\n    !isValidVariable(assignee)\n  ) {\n    return null;\n  }\n  let url_query_str = '?';\n  url_query_str += 'labels=';\n  labels.map((label) => {\n    if (isValidIDName(label)) {\n      url_query_str += label.name + ',';\n    }\n  });\n\n  if (isValidIDName(assignee)) {\n    if (assignee.name !== '') {\n      url_query_str += '&assignee=' + assignee.name;\n    }\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues' +\n    url_query_str\n  );\n};\n\nexport const getGitHubAPIURLLabel = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url)\n     + '/labels'\n  );\n};\n\nexport const getGitHubAPIURLCollaborators = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  return (\n    GitHubAPIURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/collaborators'\n  );\n};\n\nexport const getGitHubURLIssuebyNumber = (git_url, number) => {\n  if (!isGitHubURL(git_url) || !isValidVariable(number)) {\n    return null;\n  }\n  if (!isNumber(number)) {\n    number = removeFirstSharp(number);\n  }\n  if (number <= 0) {\n    return null;\n  }\n  return (\n    GitHubURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues/' +\n    number\n  );\n};\n\nexport const getGitHubURLNewIssueWithTemplate = (git_url) => {\n  if (!isGitHubURL(git_url)) {\n    return null;\n  }\n  return (\n    GitHubURL +\n    getGitHubNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitHubProjectFromGitURL(git_url) +\n    '/issues/new?assignees=&labels=&title=&body='\n  );\n};\n","import {\n  isValidVariable,\n  isValidIDName,\n  isValidURL,\n} from '../Common/CommonHelper.js';\nimport { isGitHubURL } from '../GitHub/GitHubURLHelper.js';\n\nexport const isGitLabURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return false;\n  }\n  if (git_url.split('/').length < 5) {\n    return false;\n  }\n  return /gitlab\\.com/.test(git_url);\n};\n\nexport const getSelfHostingGitLabDomain = (git_url) => {\n  if (isGitHubURL(git_url)) {\n    return null;\n  }\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[2];\n  }\n  return null;\n};\n\nexport const getGitLabDomain = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  let gitlab_domain = null;\n  const self_hosting_gitlab_domain = getSelfHostingGitLabDomain(git_url);\n  if (self_hosting_gitlab_domain !== null) {\n    gitlab_domain = git_url.substr(0, git_url.indexOf(':')) + '://' + self_hosting_gitlab_domain + '/';\n  }\n  return gitlab_domain;\n};\n\nexport const getGitLabURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  return getGitLabDomain(git_url);\n};\n\nexport const getGitLabAPIURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  return getGitLabDomain(git_url) + 'api/v4/';\n};\n\nexport const getGitLabNameSpaceFromGitURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[3];\n  }\n  return null;\n};\n\nexport const getGitLabProjectFromGitURL = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  const split_git_url = git_url.split('/');\n  if (split_git_url.length >= 5) {\n    return split_git_url[4];\n  }\n  return null;\n};\n\nexport const postFixToken = (token) => {\n  let post_fix_str = '?';\n  if (\n    isValidVariable(token) &&\n    token !== 'Tokens that have not yet been entered'\n  ) {\n    post_fix_str += 'access_token=' + token;\n  } \n  return post_fix_str;\n};\n\nexport const getGitLabAPIURLIssueFilterd = (\n  git_url,\n  token,\n  labels,\n  assignee\n) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  if (!isValidVariable(token)) {\n    return null;\n  }\n  if (!isValidVariable(labels)) {\n    return null;\n  }\n  if (!isValidIDName(assignee)) {\n    return null;\n  }\n  let post_fix_str = postFixToken(token);\n  if (isValidVariable(labels)) {\n    post_fix_str += '&labels=';\n    labels.map((label) => {\n      if (isValidIDName(label)) {\n        post_fix_str += label.name + ',';\n      }\n      return null;\n    });\n  }\n  if (isValidIDName(assignee)) {\n    if (assignee.name !== '') {\n      post_fix_str += '&assignee_id=' + assignee.id;\n    }\n  }\n  post_fix_str += '&per_page=100&state=opened';\n  return (\n    getGitLabAPIURL(git_url) +\n    'projects/' +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '%2F' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/issues' +\n    post_fix_str\n  );\n};\n\nexport const getGitabAPIURLIssuebyNumber = (git_url, token, number) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  if (!isValidVariable(token)) {\n    return null;\n  }\n  if (!isValidVariable(number)) {\n    return null;\n  }\n  const post_fix_str = postFixToken(token);\n  return (\n    getGitLabAPIURL(git_url) +\n    'projects/' +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '%2F' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/issues/' +\n    number +\n    post_fix_str\n  );\n};\n\nexport const getGitLabAPIURLLabel = (git_url, token) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  let post_fix_str = postFixToken(token);\n  post_fix_str += '&per_page=100';\n\n  return (\n    getGitLabAPIURL(git_url) +\n    'projects/' +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '%2F' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/labels' +\n    post_fix_str\n  );\n};\n\nexport const getGitLabAPIURLMember = (git_url, token) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  const post_fix_str = postFixToken(token);\n  return (\n    getGitLabAPIURL(git_url) +\n    'groups/' +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '/members/all' +\n    post_fix_str +\n    '&per_page=200'\n  );\n};\n\nexport const getGitLabURLIssuebyNumber = (git_url, number) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  return (\n    getGitLabURL(git_url) +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/-/issues/' +\n    number\n  );\n};\n\nexport const getGitLabURLNewIssueWithTemplate = (git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  }\n  return (\n    getGitLabURL(git_url) +\n    getGitLabNameSpaceFromGitURL(git_url) +\n    '/' +\n    getGitLabProjectFromGitURL(git_url) +\n    '/issues/new?issue[description]='\n  );\n};\n","import {\n  getDateFromDescriptionYaml,\n  getNumberFromDescriptionYaml,\n  removeFirstSharp,\n  replacePropertyInDescriptionString,\n  getDependonFromDescriptionYaml,\n} from '../Common/Parser.js';\nimport {\n  calculateDueDate,\n  getGanttStartDate,\n  getGanttDueDate,\n  getGanttDuration,\n  orgRound,\n  adjustDateString,\n  getGanttUpdateDate,\n} from '../Common/CommonHelper.js';\n\nconst getGitHubAssignee = (issue_info) => {\n  if (issue_info.assignee !== null) {\n    return issue_info.assignee.login;\n  }\n  return '';\n};\n\nexport const generateGanttTaskFromGitHub = (description, issue_info) => {\n  const start_date = getDateFromDescriptionYaml(description, 'start_date');\n  const due_date = getDateFromDescriptionYaml(description, 'due_date');\n\n  const gantt_task = {\n    id: '#' + issue_info.number,\n    text: issue_info.title,\n    start_date: getGanttStartDate(start_date, due_date, issue_info.created_at),\n    due_date: getGanttDueDate(start_date, due_date, issue_info.created_at),\n    duration: getGanttDuration(start_date, due_date, issue_info.created_at),\n    progress: getNumberFromDescriptionYaml(description, 'progress'),\n    assignee: getGitHubAssignee(issue_info),\n    parent: '#' + getNumberFromDescriptionYaml(description, 'parent'),\n    description: description,\n    update: getGanttUpdateDate(issue_info.created_at, issue_info.updated_at),\n  };\n  return gantt_task;\n};\n\nexport const generateLinkFromGitHub = (issue_info) => {\n  const link = [];\n  let dependon = [];\n  dependon = getDependonFromDescriptionYaml(issue_info.body, 'dependon');\n  if (dependon != null) {\n    //let data = [];\n    for (let i = 0; i < dependon.length; i++) {\n      let data = [];\n      data.type = '0';\n      data.target = '#' + issue_info.number;\n      data.source = '#' + dependon[i];\n      link.push(data);\n    }\n    return link;\n  }\n};\n\nexport const updateGitHubDescriptionStringFromGanttTask = (\n  description,\n  gantt_task\n) => {\n  const start_date_str = adjustDateString(gantt_task.start_date)\n    .replace(/\\-/g, '/');\n  const due_date_str = calculateDueDate(\n    start_date_str,\n    gantt_task.duration\n  ).replace(/\\-/g, '/');\n  const task = {\n    start_date: start_date_str,\n    due_date: due_date_str,\n    progress: orgRound(gantt_task.progress, 0.01),\n  };\n  if ('parent' in gantt_task) {\n    task.parent = parseInt(removeFirstSharp(gantt_task.parent));\n  }\n  if ('dependon' in gantt_task) {\n    task.dependon = gantt_task.dependon;\n  }\n  description = replacePropertyInDescriptionString(description, task);\n  return description;\n};\n\nexport const Arrangegantt = (issue_info) => {\n  let arrangelink = [];\n  issue_info.links.map((list) => {\n    let prearrangelink = [];\n    prearrangelink.type = list.type;\n    prearrangelink.target = list.target;\n    prearrangelink.source = list.source\n    arrangelink.push(prearrangelink);\n  });\n\n  const arrange = {\n    id: issue_info.id,\n    text: issue_info.text,\n    start_date: adjustDateString(issue_info.start_date),\n    due_date: issue_info.due_date,\n    duration: issue_info.duration,\n    progress: issue_info.progress,\n    assignee: issue_info.assignee,\n    description: issue_info.description,\n    update: issue_info.update,\n    links: arrangelink,\n    parent: '#' + issue_info.parent,\n  }\n\n  return arrange;\n};\n\nexport const contentcheck = (Arrange, generate, links) => {\n  if (\n    Arrange.id == generate.id &&\n    Arrange.text == generate.text &&\n    Arrange.start_date == generate.start_date &&\n    Arrange.due_date == generate.due_date.toString() &&\n    Arrange.duration == generate.duration &&\n    Arrange.progress == generate.progress &&\n    Arrange.assignee == generate.assignee &&\n    // Arrange.description == generate.description &&\n    Arrange.update == generate.update &&\n    Arrange.parent == generate.parent &&\n    Arrange.links.toString() == links.toString()\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n};","import axios from 'axios';\nimport {\n  getGitHubAPIURLIssuebyNumber,\n  getGitHubAPIURLIssueFilterd,\n  getGitHubAPIURLLabel,\n  getGitHubAPIURLCollaborators,\n  getGitHubURLIssuebyNumber,\n  getGitHubURLNewIssueWithTemplate,\n} from './GitHubURLHelper.js';\nimport {\n  generateGanttTaskFromGitHub,\n  generateLinkFromGitHub,\n  updateGitHubDescriptionStringFromGanttTask,\n  Arrangegantt,\n  contentcheck,\n} from './GitHubHelper.js';\nimport { date2string, isValidVariable } from '../Common/CommonHelper.js';\nimport {\n  removeFirstSharp,\n  replacePropertyInDescriptionString,\n} from '../Common/Parser.js';\n\nexport const getGitHubIssueFromAPI = async (git_url, issue_info, token) => {\n  return axios\n    .get(getGitHubAPIURLIssuebyNumber(git_url, issue_info.number), {\n      headers: { \n        Authorization: `token ${token}` },\n        data: {},\n      })\n    .then((res) => {\n      let links = [];\n      const gantt_task = generateGanttTaskFromGitHub(res.data.body, issue_info);\n      const link = generateLinkFromGitHub(issue_info);\n      if (typeof link != \"undefined\") {\n        for (let i = 0; i < link.length; i++) {\n          let prelink = {\n            type: link[i].type,\n            target: link[i].target,\n            source: link[i].source,\n          }\n          links.push(prelink)\n        }\n      }\n      gantt_task.links = links;\n      console.log(gantt_task);\n      return gantt_task;\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nexport const getGitHubIssuesFromAPI = async (\n  git_url,\n  token,\n  selected_labels,\n  selected_assignee\n) => {\n  return axios\n    .get(\n      getGitHubAPIURLIssueFilterd(git_url, selected_labels, selected_assignee), {\n        headers: { \n          Authorization: `token ${token}` },\n          data: {},\n        }\n    )\n    .then((res) => {\n      const promise_list = [];\n      res.data.map((issue_info) => {\n        promise_list.push(getGitHubIssueFromAPI(git_url, issue_info, token));\n      });\n      return Promise.all(promise_list);\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nexport const setGitHubLabelListOfRepoFromAPI = async (git_url, token) => {\n  return axios.get(getGitHubAPIURLLabel(git_url), {\n    headers: { \n      Authorization: `token ${token}` },\n      data: {},\n    })\n    .then((res) => {\n      let labels = [];\n      res.data.map((info) => {\n        labels.push({ id: info.id, name: info.name });\n        return null;\n      });\n    return labels;\n  });\n};\n\nexport const setGitHubMemberListOfRepoFromAPI = async (git_url, token) => {\n  if (\n    isValidVariable(token) &&\n    token !== 'Tokens that have not yet been entered'\n  ) {\n    return axios\n      .get(getGitHubAPIURLCollaborators(git_url), {\n        headers: { Authorization: `token ${token}` },\n        data: {},\n      })\n      .then((res) => {\n        let members = [];\n        res.data.map((info) => {\n          members.push({ id: info.id, name: info.login });\n          return null;\n        });\n        return members;\n      });\n  } else {\n    console.warn('token is not valid!');\n  }\n};\n\nexport const updateGitHubIssueFromGanttTask = (\n  gantt_task,\n  token,\n  gantt,\n  git_url\n) => {\n  const url = getGitHubAPIURLIssuebyNumber(\n    git_url,\n    removeFirstSharp(gantt_task.id)\n  );\n  axios\n    .get(url, {\n      headers: { \n        Authorization: `token ${token}` },\n        data: {},\n      })\n    .then((res) => {\n      const issue_info = res.data;\n      if (\n        updateGitHubDescriptionStringFromGanttTask(\n          issue_info.body,\n          gantt_task\n        ) == null\n      ) {\n        gantt.message({\n          text: 'failed update issue. ' + gantt_task.text,\n          type: 'error',\n        });\n      } else {\n        if (contentcheck(Arrangegantt(gantt_task), generateGanttTaskFromGitHub(issue_info.body, issue_info), generateLinkFromGitHub(issue_info))!=true) {\n          axios\n            .post(\n              url,\n              {\n                body: updateGitHubDescriptionStringFromGanttTask(\n                  issue_info.body,\n                  gantt_task\n                ),\n              },\n              {\n                headers: {\n                  Authorization: `token ${token}`,\n                },\n              }\n            )\n            .then((res) => {\n              gantt.message({\n                text: 'success update issue.  ' + gantt_task.id,\n              });\n            })\n            .catch((err) => {\n              gantt.message({\n                text: 'failed update GitHub issue. check your token.' + err,\n                type: 'error',\n              });\n            });\n        }\n      }\n    })\n    .catch((err) => {\n      gantt.message({\n        text: 'failed get GitHub issue. check your url.' + err,\n        type: 'error',\n      });\n      getGitHubIssuesFromAPI(gantt, git_url, token);\n    });\n  return null;\n};\n\nexport const openGitHubIssueAtBrowser = (gantt_task_id, git_url) => {\n  window.open(\n    getGitHubURLIssuebyNumber(git_url, removeFirstSharp(gantt_task_id)),\n    '_blank'\n  );\n};\n\nexport const openGitHubNewIssueAtBrowser = (gantt_task, git_url) => {\n  const start_date_str = date2string(new Date());\n  const due_date_str = date2string(new Date());\n  if (gantt_task.parent == null) {\n    gantt_task.parent = 0;\n  }\n  const task = {\n    start_date: start_date_str,\n    due_date: due_date_str,\n    progress: 0.1,\n    parent: parseInt(removeFirstSharp(gantt_task.parent)),\n  };\n  let body = replacePropertyInDescriptionString('', task);\n  body = encodeURIComponent(body);\n  window.open(getGitHubURLNewIssueWithTemplate(git_url) + body, '_blank');\n};\n","import {\n  removeFirstSharp,\n  getDateFromDescriptionYaml,\n  getNumberFromDescriptionYaml,\n  replacePropertyInDescriptionString,\n  getDependonFromDescriptionYaml,\n} from '../Common/Parser.js';\nimport {\n  getGanttStartDate,\n  getGanttDueDate,\n  getGanttDuration,\n  orgRound,\n  adjustDateString,\n  isValidVariable,\n  getGanttUpdateDate,\n} from '../Common/CommonHelper.js';\n\nconst getGitLabAssignee = (issue_info) => {\n  if (isValidVariable(issue_info) && 'assignee' in issue_info) {\n    if (isValidVariable(issue_info.assignee) && 'name' in issue_info.assignee) {\n      return issue_info.assignee.name;\n    }\n  }\n  return '';\n};\n\nexport const generateGanttTaskFromGitLab = (issue_info) => {\n  const start_date = getDateFromDescriptionYaml(\n    issue_info.description,\n    'start_date'\n  );\n  const due_date = adjustDateString(issue_info.due_date);\n  const gantt_task = {\n    id: '#' + issue_info.iid,\n    text: issue_info.title,\n    start_date: getGanttStartDate(start_date, due_date, issue_info.created_at),\n    due_date: getGanttDueDate(start_date, due_date, issue_info.created_at),\n    duration: getGanttDuration(start_date, due_date, issue_info.created_at),\n    progress: getNumberFromDescriptionYaml(issue_info.description, 'progress'),\n    assignee: getGitLabAssignee(issue_info),\n    description: issue_info.description,\n    update: getGanttUpdateDate(issue_info.created_at, issue_info.updated_at),\n  };\n  console.log(gantt_task)\n  let parent = getNumberFromDescriptionYaml(issue_info.description, 'parent');\n  if (parent !== null) {\n    if (parent !== 0) {\n      gantt_task.parent = '#' + parent;\n    }\n  }\n  let links = [];\n  const link = generateLinkFromGitLab(issue_info);\n  if (typeof link != \"undefined\") {\n    for (let i = 0; i < link.length; i++) {\n      let prelink = {\n        type: link[i].type,\n        target: link[i].target,\n        source: link[i].source,\n      }\n      links.push(prelink);\n    }\n  }\n  gantt_task.links = links;\n  return gantt_task;\n};\n\nexport const generateLinkFromGitLab = (issue_info) => {\n  const link = [];\n  let dependon = [];\n  dependon = getDependonFromDescriptionYaml(issue_info.description, 'dependon');\n  if (dependon != null) {\n    //let data = [];\n    for (let i = 0; i < dependon.length; i++) {\n      let data = [];\n      data.type = '0';\n      data.target = '#' + issue_info.iid;\n      data.source = '#' + dependon[i];\n      link.push(data);\n    }\n    return link;\n  }\n};\n\nexport const updateGitLabDescriptionStringFromGanttTask = (\n  description,\n  gantt_task\n) => {\n  const start_date_str = adjustDateString(gantt_task.start_date).replace(\n    /\\-/g,\n    '/'\n  );\n  const task = {\n    start_date: start_date_str,\n    progress: orgRound(gantt_task.progress, 0.01),\n  };\n  if ('parent' in gantt_task) {\n    task.parent = parseInt(removeFirstSharp(gantt_task.parent));\n  }\n  if ('dependon' in gantt_task) {\n    task.dependon = gantt_task.dependon;\n  }\n  return replacePropertyInDescriptionString(description, task);\n};\n\nexport const Arrangegantt = (issue_info) => {\n  let arrangelink = [];\n  issue_info.links.map((list) => {\n    arrangelink.push({ type: list.type, target: list.target, source: list.source });\n  });\n\n  const arrange = {\n    id: issue_info.id,\n    text: issue_info.text,\n    start_date: adjustDateString(issue_info.start_date),\n    due_date: issue_info.due_date,\n    duration: issue_info.duration,\n    progress: issue_info.progress,\n    assignee: issue_info.assignee,\n    description: issue_info.description,\n    update: issue_info.update,\n    links: arrangelink,\n  }\n  if (issue_info.parent !== 0) {\n    arrange.parent = issue_info.parent;\n  }\n  return arrange;\n};\n\nexport const contentcheck = (Arrange, generate) => {\n  if (\n    Arrange.id == generate.id &&\n    Arrange.text == generate.text &&\n    Arrange.start_date == generate.start_date &&\n    Arrange.due_date == generate.due_date.toString() &&\n    Arrange.duration == generate.duration &&\n    Arrange.progress == generate.progress &&\n    Arrange.assignee == generate.assignee &&\n    // Arrange.description == generate.description &&\n    Arrange.update == generate.update &&\n    Arrange.parent == generate.parent &&\n    JSON.stringify(Arrange.links) == JSON.stringify(generate.links)\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n};\n","import axios from 'axios';\nimport {\n  getGitLabAPIURLIssueFilterd,\n  getGitLabAPIURLLabel,\n  getGitLabAPIURLMember,\n  getGitabAPIURLIssuebyNumber,\n  getGitLabURLIssuebyNumber,\n  getGitLabURLNewIssueWithTemplate,\n} from './GitLabURLHelper.js';\nimport {\n  generateGanttTaskFromGitLab,\n  generateLinkFromGitLab,\n  updateGitLabDescriptionStringFromGanttTask,\n  Arrangegantt,\n  contentcheck,\n} from './GitLabHelper.js';\nimport {\n  adjustDateString,\n  calculateDueDate,\n  date2string,\n} from '../Common/CommonHelper.js';\nimport {\n  removeFirstSharp,\n  replacePropertyInDescriptionString,\n} from '../Common/Parser.js';\n\nexport const getGitLabIssuesFromAPI = async (\n  git_url,\n  token,\n  selected_labels,\n  assignee\n) => {\n  return axios\n    .get(getGitLabAPIURLIssueFilterd(git_url, token, selected_labels, assignee))\n    .then((res) => {\n      let data = [];\n      res.data.map((issue_info) => {\n        const gantt_task = generateGanttTaskFromGitLab(issue_info);\n\n        data.push(gantt_task);\n      });\n      return data;\n    })\n    .catch((err) => {\n      console.error(err);\n      return Promise.reject(err);\n    });\n};\n\nexport const setGitLabLabelListOfRepoFromAPI = async (git_url, token) => {\n  return axios\n    .get(getGitLabAPIURLLabel(git_url, token))\n    .then((res) => {\n      let labels = [];\n      res.data.map((lebel_info) => {\n        labels.push(lebel_info);\n        return null;\n      });\n      return labels;\n    })\n    .catch((err) => {\n      console.error(err);\n      return Promise.reject(err);\n    });\n};\n\nexport const setGitLabMemberListOfRepoFromAPI = async (git_url, token) => {\n  return axios\n    .get(getGitLabAPIURLMember(git_url, token))\n    .then((res) => {\n      let members = [];\n      res.data.map((info) => {\n        members.push({ id: info.id, name: info.name });\n        return null;\n      });\n      return members;\n    })\n    .catch((err) => {\n      console.error(err);\n      return Promise.reject(err);\n    });\n};\n\nexport const updateGitLabIssueFromGanttTask = (\n  gantt_task,\n  token,\n  gantt,\n  git_url\n) => {\n  return axios\n    .get(\n      getGitabAPIURLIssuebyNumber(\n        git_url,\n        token,\n        removeFirstSharp(gantt_task.id)\n      )\n    )\n    .then((res) => {\n      const issue_info = res.data;\n      if (contentcheck(Arrangegantt(gantt_task),generateGanttTaskFromGitLab(issue_info))!=true) {\n        if (\n          parseInt(issue_info.iid) === parseInt(removeFirstSharp(gantt_task.id))\n        ) {\n          let description = updateGitLabDescriptionStringFromGanttTask(\n            issue_info.description,\n            gantt_task\n          );\n          if (description == null) {\n            gantt.message({\n              text: 'failed update issue. ' + gantt_task.text,\n              type: 'error',\n            });\n          } else {\n            description = encodeURIComponent(description);\n            const start_date_str = adjustDateString(gantt_task.start_date);\n            const due_date_str = calculateDueDate(\n              start_date_str,\n              gantt_task.duration\n            );\n            const put_url =\n              getGitabAPIURLIssuebyNumber(\n                git_url,\n                token,\n                removeFirstSharp(gantt_task.id)\n              ) +\n              '&description=' +\n              description +\n              '&due_date=' +\n              due_date_str;\n            return axios\n              .put(put_url)\n              .then((res) => {\n                gantt.message({\n                  text: 'success update issue.  ' + gantt_task.id,\n                });\n              })\n              .catch((err) => {\n                console.error(err);\n                return Promise.reject(err);\n              });\n          }\n        }\n      }\n    })\n    .catch((err) => {\n      gantt.message({\n        text: 'failed get GitLab issue. check your token.',\n        type: 'error',\n      });\n    });\n};\n\nexport const openGitLabIssueAtBrowser = (id, git_url) => {\n  window.open(\n    getGitLabURLIssuebyNumber(git_url, removeFirstSharp(id)),\n    '_blank'\n  );\n};\n\nexport const openGitLabNewIssueAtBrowser = (gantt_task, git_url) => {\n  const start_date_str = date2string(new Date());\n  if (gantt_task.parent == null) {\n    gantt_task.parent = 0;\n  }\n  const task = {\n    start_date: start_date_str,\n    progress: 0.1,\n    parent: parseInt(removeFirstSharp(gantt_task.parent)),\n  };\n  let body = replacePropertyInDescriptionString('', task);\n  body = encodeURIComponent(body);\n  window.open(getGitLabURLNewIssueWithTemplate(git_url) + body, '_blank');\n};\n","import { isGitHubURL } from '../GitHub/GitHubURLHelper.js';\nimport {\n  isGitLabURL,\n  getSelfHostingGitLabDomain,\n} from '../GitLab/GitLabURLHelper.js';\nimport {\n  getGitHubIssuesFromAPI,\n  updateGitHubIssueFromGanttTask,\n  openGitHubIssueAtBrowser,\n  openGitHubNewIssueAtBrowser,\n  setGitHubLabelListOfRepoFromAPI,\n  setGitHubMemberListOfRepoFromAPI,\n} from '../GitHub/GitHubAPI.js';\nimport {\n  getGitLabIssuesFromAPI,\n  updateGitLabIssueFromGanttTask,\n  openGitLabIssueAtBrowser,\n  openGitLabNewIssueAtBrowser,\n  setGitLabLabelListOfRepoFromAPI,\n  setGitLabMemberListOfRepoFromAPI,\n} from '../GitLab/GitLabAPI.js';\nimport { isValidURL } from '../Common/CommonHelper.js';\n\nexport const getIssuesFromAPI = async (\n  git_url,\n  token,\n  selected_labels,\n  selected_assignee\n) => {\n  if (!isValidURL(git_url)) {\n    return Promise.resolve();\n  } else if (isGitHubURL(git_url)) {\n    return getGitHubIssuesFromAPI(git_url, token, selected_labels, selected_assignee);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    return getGitLabIssuesFromAPI(\n      git_url,\n      token,\n      selected_labels,\n      selected_assignee\n    );\n  }\n};\n\nexport const setLabelListOfRepoFromAPI = async (git_url, token) => {\n  if (!isValidURL(git_url)) {\n    return Promise.resolve();\n  } else if (isGitHubURL(git_url)) {\n    return setGitHubLabelListOfRepoFromAPI(git_url, token);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    return setGitLabLabelListOfRepoFromAPI(git_url, token);\n  }\n};\n\nexport const setMemberListOfRepoFromAPI = async (git_url, token) => {\n  if (!isValidURL(git_url)) {\n    return Promise.resolve();\n  } else if (isGitHubURL(git_url)) {\n    return setGitHubMemberListOfRepoFromAPI(git_url, token);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    return setGitLabMemberListOfRepoFromAPI(git_url, token);\n  }\n};\n\nexport const updateIssueByAPI = (gantt_task, token, gantt, git_url) => {\n  if (!isValidURL(git_url)) {\n    return Promise.resolve();\n  } else if (isGitHubURL(git_url)) {\n    return updateGitHubIssueFromGanttTask(gantt_task, token, gantt, git_url);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    return updateGitLabIssueFromGanttTask(gantt_task, token, gantt, git_url);\n  }\n};\n\nexport const openIssueAtBrowser = (gantt_task_id, git_url) => {\n  if (!isValidURL(git_url)) {\n    return Promise.resolve();\n  } else if (isGitHubURL(git_url)) {\n    openGitHubIssueAtBrowser(gantt_task_id, git_url);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    openGitLabIssueAtBrowser(gantt_task_id, git_url);\n  }\n};\n\nexport const openNewIssueAtBrowser = (gantt_task, git_url) => {\n  if (!isValidURL(git_url)) {\n    return null;\n  } else if (isGitHubURL(git_url)) {\n    openGitHubNewIssueAtBrowser(gantt_task, git_url);\n  } else if (\n    isGitLabURL(git_url) ||\n    getSelfHostingGitLabDomain(git_url) !== null\n  ) {\n    openGitLabNewIssueAtBrowser(gantt_task, git_url);\n  }\n};\n","import { bake_cookie } from 'sfcookies';\nimport {\n  convertIDNamesStringToList,\n  convertIDNameListToString,\n  removeLastSlash,\n  removeLastSpace,\n} from '../functions/Common/Parser.js';\nimport {\n  updateIssueByAPI,\n  openIssueAtBrowser,\n  openNewIssueAtBrowser,\n} from '../functions/Common/IssueAPI.js';\nimport { isValidVariable } from '../functions/Common/CommonHelper.js';\nimport { isGitHubURL } from '../functions/GitHub/GitHubURLHelper.js';\nimport {\n  isGitLabURL,\n  getSelfHostingGitLabDomain,\n} from '../functions/GitLab/GitLabURLHelper.js';\n\nimport { gantt } from 'dhtmlx-gantt';\n\nexport const initialState = {\n  currentZoom: 'Days',\n  update: 0,\n  git_url: '',\n  token: 'Tokens that have not yet been entered',\n  labels: [],\n  selected_labels: [],\n  member_list: [],\n  selected_assignee: {},\n  issue: [],\n  issue_columns: [],\n};\n\nexport const reducerFunc = (state, action) => {\n  switch (action.type) {\n    case 'zoomChange':\n      return { ...state, currentZoom: action.value };\n    case 'gitURLChange':\n      return {\n        ...state,\n        git_url: handleGitURLChange(\n          action.value.props,\n          action.value.git_url,\n          state.selected_labels\n        ),\n      };\n    case 'tokenChange':\n      return { ...state, token: handleTokenChange(action.value) };\n    case 'labelChange':\n      return { ...state, labels: action.value };\n    case 'selectedLabelsChange':\n      return {\n        ...state,\n        selected_labels: handleSelectedLabelsChange(\n          action.value.props,\n          state.git_url,\n          action.value.selected_labels,\n          state.selected_assignee\n        ),\n      };\n    case 'memberListChange':\n      return { ...state, member_list: handleMemberListChange(action.value) };\n    case 'selectedAssigneeChange':\n      return {\n        ...state,\n        selected_assignee: handleSelectedAssigneeChange(\n          action.value.props,\n          state.git_url,\n          state.selected_labels,\n          action.value.selected_assignee\n        ),\n      };\n    case 'updateClick':\n      return { ...state, update: state.update + 1 };\n    case 'openIssueAtBrowser':\n      return handleOpenIssueAtBrowser(state, action);\n    case 'openNewIssueAtBrowser':\n      return handleOpenNewIssueAtBrowser(state, action);\n    case 'updateIssueByAPI':\n      return handleUpdateIssueByAPI(state, action);\n    case 'setIssue':\n      return { ...state, issue: action.value };\n      \n    case 'setStateFromURLQueryString':\n      return setStateFromURLQueryString(\n        state,\n        action.value.props,\n        action.value.setValue\n      );\n    default:\n      return state;\n  }\n};\n\nexport const handleOpenIssueAtBrowser = (state, action) => {\n  openIssueAtBrowser(action.value, state.git_url);\n  return state;\n};\n\nexport const handleOpenNewIssueAtBrowser = (state, action) => {\n  openNewIssueAtBrowser(action.value, state.git_url);\n  return state;\n};\n\nexport const handleUpdateIssueByAPI = (state, action) => {\n  updateIssueByAPI(\n    action.value.gantt_task,\n    state.token,\n    action.value.gantt,\n    state.git_url\n  );\n  return state;\n};\n\nexport const handleGitURLChange = (\n  props,\n  git_url,\n  selected_labels,\n  selected_assignee\n) => {\n  git_url = removeLastSlash(removeLastSpace(git_url));\n  if (isGitHubURL(git_url)) {\n    gantt.message({ text: 'Access GitHub.com' });\n  } else if (isGitLabURL(git_url)) {\n    gantt.message({ text: 'Access GitLab.com' });\n  } else if (getSelfHostingGitLabDomain(git_url) !== null) {\n    gantt.message({ text: 'Access Maybe GitLab.self-host' });\n  } else if (git_url === '') {\n  } else {\n    gantt.message({ text: 'Not a valid URL.', type: 'error' });\n    return null;\n  }\n  setURLQuery(props, git_url, selected_labels, selected_assignee);\n  return git_url;\n};\n\nexport const handleTokenChange = (token) => {\n  bake_cookie('git_token', token);\n  return token;\n};\n\nexport const handleSelectedLabelsChange = (\n  props,\n  git_url,\n  selected_labels,\n  selected_assignee\n) => {\n  setURLQuery(props, git_url, selected_labels, selected_assignee);\n  return selected_labels;\n};\n\nexport const handleMemberListChange = (\n  member_list\n) => {\n  if (isValidVariable(member_list)) {\n    return member_list;\n  } else {\n    return [];\n  }\n};\n\nexport const handleSelectedAssigneeChange = (\n  props,\n  git_url,\n  selected_labels,\n  selected_assignee\n) => {\n  setURLQuery(props, git_url, selected_labels, selected_assignee);\n  return selected_assignee;\n};\n\nexport const setURLQuery = (props, git_url, selected_labels, selected_assignee) => {\n  const params = new URLSearchParams(props.location.search);\n  params.set('giturl', git_url);\n  params.set('labels', convertIDNameListToString(selected_labels));\n  params.set('assignee', convertIDNameListToString([selected_assignee]));\n  props.history.push({\n    search: params.toString(),\n  });\n  return null;\n};\n\nexport const setStateFromURLQueryString = (state, props, setValue) => {\n  const params = new URLSearchParams(props.location.search);\n  state.git_url = params.get('giturl');\n\n  const selected_labels = convertIDNamesStringToList(params.get('labels'));\n  if (isValidVariable(selected_labels[0])) {\n    if ('name' in selected_labels[0]) {\n      if (selected_labels[0].name !== '') {\n        state.selected_labels = selected_labels;\n      }\n    }\n  }\n\n  const selected_assignee_list = convertIDNamesStringToList(\n    params.get('assignee')\n  );\n  if (isValidVariable(selected_assignee_list)) {\n    state.selected_assignee = selected_assignee_list[0];\n  }\n  setValue('git_url', state.git_url);\n  return state;\n};\n","import React, { useReducer, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport Toolbar from './components/Toolbar';\nimport Gantt from './components/Gantt';\nimport { read_cookie } from 'sfcookies';\nimport { withRouter } from 'react-router-dom';\nimport { initialState, reducerFunc } from './State/Reducer.js';\nimport {\n  getIssuesFromAPI,\n  setLabelListOfRepoFromAPI,\n  setMemberListOfRepoFromAPI,\n} from './functions/Common/IssueAPI.js';\nimport { gantt } from 'dhtmlx-gantt';\n\nconst App = (props) => {\n  const [state, dispatch] = useReducer(reducerFunc, initialState);\n  const { register, setValue } = useForm({ git_url: '', token: '' });\n\n  useEffect(() => {\n    setValue('token', read_cookie('git_token'));\n    dispatch({ type: 'tokenChange', value: read_cookie('git_token') });\n  }, []);\n\n  useEffect(() => {\n    dispatch({\n      type: 'setStateFromURLQueryString',\n      value: { props: props, setValue: setValue },\n    });\n  }, [props.location]);\n\n  useEffect(() => {\n    setLabelListOfRepoFromAPI(state.git_url, state.token)\n      .then((labels) => {\n        dispatch({ type: 'labelChange', value: labels });\n      })\n      .catch((err) => {\n        gantt.message({ text: err, type: 'error' });\n      });\n    setMemberListOfRepoFromAPI(state.git_url, state.token)\n      .then((members) => {\n        dispatch({ type: 'memberListChange', value: members });\n      })\n      .catch((err) => {\n        gantt.message({ text: err, type: 'error' });\n      });\n  }, [state.git_url, state.token, state.selected_assignee]);\n\n  useEffect(() => {\n    //dispatch({ type: 'getIssueByAPI' });\n    getIssuesFromAPI(\n      state.git_url,\n      state.token,\n      state.selected_labels,\n      state.selected_assignee\n    )\n      .then((issues) => {\n        dispatch({ type: 'setIssue', value: issues });\n      })\n      .catch((err) => {\n        console.log('error');\n      });\n  }, [\n    state.git_url,\n    state.token,\n    state.selected_labels,\n    state.selected_assignee,\n    state.update,\n  ]);\n\n  return (\n    <>\n      <div className=\"zoom-bar\">\n        <Toolbar\n          zoom={state.currentZoom}\n          onZoomChange={(zoom) => dispatch({ type: 'zoomChange', value: zoom })}\n          onGitURLChange={(git_url) =>\n            dispatch({\n              type: 'gitURLChange',\n              value: { props: props, git_url: git_url },\n            })\n          }\n          token={state.token}\n          onTokenChange={(token) =>\n            dispatch({ type: 'tokenChange', value: token })\n          }\n          onUpdateClick={() => dispatch({ type: 'updateClick' })}\n          labels={state.labels}\n          selected_labels={state.selected_labels}\n          onSelectedLabelChange={(selected_labels) =>\n            dispatch({\n              type: 'selectedLabelsChange',\n              value: { props: props, selected_labels: selected_labels },\n            })\n          }\n          member_list={state.member_list}\n          selected_assignee={state.selected_assignee}\n          onSelectedAssigneeChange={(selected_assignee) =>\n            dispatch({\n              type: 'selectedAssigneeChange',\n              value: { props: props, selected_assignee: selected_assignee },\n            })\n          }\n          register={register}\n        />\n      </div>\n      <div className=\"gantt-container\">\n        <Gantt\n          zoom={state.currentZoom}\n          git_url={state.git_url}\n          token={state.token}\n          selected_labels={state.selected_labels}\n          selected_assignee={state.selected_assignee}\n          issue={state.issue}\n          update={state.update}\n          openIssueAtBrowser={(gantt_task_id) =>\n            dispatch({ type: 'openIssueAtBrowser', value: gantt_task_id })\n          }\n          openNewIssueAtBrowser={(gantt_task_id) =>\n            dispatch({ type: 'openNewIssueAtBrowser', value: gantt_task_id })\n          }\n          updateIssueByAPI={(gantt_task, gantt) =>\n            dispatch({\n              type: 'updateIssueByAPI',\n              value: { gantt_task: gantt_task, gantt: gantt },\n            })\n          }\n        />\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <Route render={(props) => <App />} />\n  </Router>,\n  document.getElementById(\"root\"));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}